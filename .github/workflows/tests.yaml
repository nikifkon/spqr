name: tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  unit:
     name: unit
     runs-on: ubuntu-latest
     steps:

     - name: Check out code
       uses: actions/checkout@v2

     - name: unit tests
       run: make unittest

  e2e:
    name: e2e
    runs-on: ubuntu-latest
    steps:
    
    - name: Check out code
      uses: actions/checkout@v2
    
    - name: e2e tests
      run: make e2e

  stress:
    name: stress
    runs-on: ubuntu-latest
    steps:

      - name: Check out code
        uses: actions/checkout@v2

      - name: stress tests
        run: make stress
  regress:
    name: regress
    runs-on: ubuntu-latest
    steps:

      - name: Check out code
        uses: actions/checkout@v2

      - name: regress tests
        run: make regress

  feature_prepare:
    name: feature_prepare
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.step1.outputs.features }}
    steps:
      - name: Install Latest Docker
        run: |
          for pkg in docker.io docker-doc docker-compose podman-docker containerd runc; do sudo apt-get remove $pkg; done
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
          sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu  $(lsb_release -cs)  stable"
          sudo apt-get update
          sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
      - name: Check Docker Version
        run: docker --version

      - name: Check out code
        uses: actions/checkout@v2
      - id: step1
        run: |
          make split_feature_test
          array=$(for x in $(ls test/feature/generatedFeatures); do echo $x; done | python3 -c "import sys; print(['GODOG_FEATURE_DIR=generatedFeatures GODOG_FEATURE={} make feature_test'.format(test.strip()) for test in sys.stdin.readlines()])")
          echo "features=$(echo "{\"command\": $array}")" >> $GITHUB_OUTPUT
      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: generated_tests
          path: |
            ./test/feature/generatedFeatures

  feature:
    name: feature
    runs-on: ubuntu-latest
    needs: feature_prepare
    strategy:
      matrix: ${{ fromJson(needs.feature_prepare.outputs.output1) }}
      # do not cancel all tests if one failed
      fail-fast: false
    steps:
      - name: Install Latest Docker
        run: |
          for pkg in docker.io docker-doc docker-compose podman-docker containerd runc; do sudo apt-get remove $pkg; done
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
          sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu  $(lsb_release -cs)  stable"
          sudo apt-get update
          sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
      - name: Check Docker Version
        run: docker --version
      - name: Check out code
        uses: actions/checkout@v2
      - name: Download spqr build
        uses: actions/download-artifact@v3
        with:
          name: generated_tests
          path: ./test/feature/generatedFeatures
      - name: feature tests
        run: ${{ matrix.command }}
